<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<title>
		Inserting Text At The Last Known Selection / Caret Location In JavaScript
	</title>

	<link rel="stylesheet" type="text/css" href="./demo.css" />
</head>
<body>

	<h1>
		Inserting Text At The Last Known Selection / Caret Location In JavaScript
	</h1>

	<textarea id="input">Me? ... I'm scared of everything. I'm scared of what I saw, of what I did, of who I am. And most of all, I'm scared of walking out of this room and never feeling the rest of my whole life ... the way I feel when I'm with you.";</textarea>

	<div id="buttons">
		<button>(Meep)</button>
		<button>(Moop)</button>
		<button>&#x1F642;</button><!-- slightly smiling face -->
		<button>&#x2639;&#xFE0F;</button><!-- frowning face -->
	</div> 

	<script type="text/javascript" src="../../vendor/jquery/3.6.0/jquery-3.6.0.min.js"></script>
	<script type="text/javascript">

		var input = $( "#input" );
		var buttons = $( "#buttons" );

		// When the user clicks on one of the target text-tokens, we are going to insert
		// that token into the textarea at the last known selection location.
		buttons.on( "click", "button", handleButtonClick );

		function handleButtonClick() {

			var inputValue = input.val();
			// For the sake of simplicity, we're going to pull the insertable text right
			// out of the DOM structure. Fun fact, using .textContent will pull the emoji
			// glyph that was generated by HTML entities.
			var insertToken = $( this ).text();

			// NOTE: Even after the input is blurred, it appears to retain its last-known
			// selection properties. As such, we don't have to track those through the
			// life-cycle of the page - we can just reference them at any time.
			var insertTokenAt = input.prop( "selectionEnd" );
			// After we insert the text, we're going to want to re-focus the input.
			// However, we're going to want to advance the selection such that it starts
			// just after the inserted text.
			var nextSelectionEnd = ( insertTokenAt + insertToken.length );

			// Insert the text at the given location within the input.
			input.val(
				inputValue.slice( 0, insertTokenAt ) +
				insertToken +
				inputValue.slice( insertTokenAt )
			);

			// Advance the text selection to just after the inserted text.
			input
				.prop( "selectionStart", nextSelectionEnd )
				.prop( "selectionEnd", nextSelectionEnd )
				.focus()
			;

		}

	</script>

</body>
</html>
